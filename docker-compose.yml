version: '3.8'

services:
  mysql:
    image: mysql:8.0.20
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./infra:/backup
    networks:
      - internal_network
    restart: unless-stopped
  
  # wait_for_mysql:
  #   image: busybox
  #   depends_on:
  #     - mysql
  #   volumes:
  #     - ./infra/backup.sql:/backup/backup.sql
  #     - ./infra/commands/wait-for-it.sh:/wait-for-it.sh
  #   entrypoint: ["sh", "-c", "sleep 180 && sh /wait-for-it.sh mysql 'cat /backup/backup.sql | mysql -u root --password=12345 MiteHunter'"]

  # budibase:
  #   image: budibase/budibase:2.11.41
  #   container_name: budibase
  #   ports:
  #     - "10000:80"
  #   networks:
  #     - internal_network
  #   restart: unless-stopped

  # metabase:
  #   image: metabase/metabase
  #   container_name: metabase
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - internal_network
  #   restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8081:80"
    networks:
      - internal_network
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - internal_network
    restart: on-failure

  django:
    build:
      context: .
      dockerfile: Dockerfile.django
    container_name: django
    ports:
      - "8000:8000"
    networks:
      - internal_network
    restart: unless-stopped

volumes:
  portainer_data:

networks:
  internal_network:
